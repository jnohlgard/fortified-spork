#!/usr/bin/sh
set -eu

if [ $# -ne 2 ]; then
  >&2 printf 'Usage: %s <keyid> <outdir>\n' "${0##*/}"
  exit 2
fi

# Ensure only a single instance is running at a time. This avoids user
# confusion when generating two or more keys at boot.
[ "${FLOCKER-}" != "$0" ] && exec env FLOCKER="$0" flock -x "$0" "$0" "$@" || :

keyid="$1"; shift
outdir="$1"; shift
keysize=20
loadercredsdir='/efi/loader/credentials'

umask 077

generate_key() {
  [ $# -eq 1 ] || return 2
  keylen="$1"
  dd if=/dev/urandom bs="${keylen}" count=1 status=none | base32 -w0
}

new_key="$(generate_key "${keysize}")"

if [ -e "${outdir}/${keyid}" ]; then 
  >&2 printf 'Key already exists: %s\n' "${outdir}/${keyid}"
  exit 1
fi

systemd-creds encrypt \
  --with-key=tpm2 \
  --name="${keyid}" \
  --tpm2-pcrs=7 \
  --tpm2-public-key=/.extra/tpm2-pcr-public-key.pem \
  --tpm2-signature=/.extra/tpm2-pcr-signature.json \
  --tpm2-public-key-pcrs=11 \
  - "${outdir}/${keyid}" <<-EOF
	${new_key}
	EOF

algorithm=sha1
period=30
digits=6
window=2
now_offset="now -$((window * period / 2)) sec"
sd_ask_pass_id="${0##*/}:${keyid}"

# Text labels for authenticator app URIs, does not affect the generated code.
issuer_urlencoded='Bootauth'
account_urlencoded="${keyid}@hostname"
ALGORITHM="$(printf '%s' "${algorithm}" | tr '[:lower:]' '[:upper:]')"
otpauth_uri="otpauth://totp/${account_urlencoded}?issuer=${issuer_urlencoded}&"
if [ "${ALGORITHM}" != "SHA1" ]; then
  otpauth_uri="${otpauth_uri}algorithm=${algorithm}&"
fi
if [ "${digits}" -ne 6 ]; then
  otpauth_uri="${otpauth_uri}digits=${digits}&"
fi
if [ "${period}" -ne 30 ]; then
  otpauth_uri="${otpauth_uri}period=${period}&"
fi
otpauth_uri="${otpauth_uri}secret=${new_key}"

verify_totp() {
  oathtool --totp="${algorithm}" \
    --time-step-size="${period}" \
    --digits="${digits}" \
    --now="${now_offset}" \
    --window="${window}" \
    --base32 \
    "@/proc/self/fd/3" \
    - >/dev/null 2>/dev/null 3<<-EOF
	${new_key}
	EOF
}

while true; do
  if command -v qrencode &>/dev/null; then
    tr -cd '[:graph:]' <<-EOF | qrencode -t utf8 -m 2
	${otpauth_uri}
	EOF
  fi
  printf '\nCurrent time (UTC): %s\n' "$(date -u)"
  cat <<-EOF
	TOTP parameters:
	Algorithm: ${algorithm}
	Period: ${period}
	Digits: ${digits}
	TOTP key <<${keyid}>>
	  -<([  ${new_key}  ])>-
	Authenticator URL: ${otpauth_uri}
	EOF

  if systemd-ask-password \
    --id="${sd_ask_pass_id}" \
    --icon=dialog-password \
    --timeout="${period}" \
    --echo=yes \
    "Enter TOTP code to confirm:" \
    | verify_totp; then
    printf 'Code OK!\n'
    break
  fi
  >&2 printf 'Wrong user TOTP code.\n'
  printf 'Try again.\n'
done
printf 'Copying newly generated code to ESP loader credentials dir\n'
cp -v "${outdir}/${keyid}" "${loadercredsdir}/${keyid}.cred"
